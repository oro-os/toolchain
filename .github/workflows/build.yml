name: Build Toolchain
on:
    push:
      branches:
        - master

env:
    RUST_BACKTRACE: full

jobs:
    build:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
              with:
                submodules: true
            - name: Install Dependencies
              shell: bash
              run: sudo apt-get update && sudo apt-get install -y build-essential git cmake ninja-build python3
            # Get the cached build artifacts
            - name: Restore cache
              id: cache-restore
              uses: actions/cache/restore@v4
              with:
                path: build/
                key: ${{runner.os}}-artifacts-${{github.run_id}}-${{github.run_attempt}}
                restore-keys: |
                  ${{runner.os}}-artifacts-${{github.run_id}}-
                  ${{runner.os}}-artifacts-
            - name: Build LLVM
              shell: bash
              run: |
                if [ ! -d build/llvm ]; then mkdir -p build/llvm; cmake -G Ninja -S llvm-project/llvm -B build/llvm -GNinja -DCMAKE_BUILD_TYPE=Release -DLLVM_ENABLE_PROJECTS="clang;lld" -DLLVM_TARGETS_TO_BUILD="X86"; fi
                ninja -C build/llvm
            - name: Copy Rust Config
              shell: bash
              run: cp rust-config.toml rust/config.toml
            - name: Build Rust
              shell: bash
              run: mkdir -p build/rust && cd rust && ./x.py build compiler library rustfmt clippy cargo --stage 3
            # Save the cache BEFORE we stage for artifact upload.
            - name: Save Cache
              uses: actions/cache/save@v4
              with:
                path: build/
                key: ${{ steps.cache-restore.outputs.cache-primary-key }}
            - name: Stage source directories
              shell: bash
              run: ./stage-rust-src.sh build/rust/host/stage3
            - name: Upload Artifacts
              uses: actions/upload-artifact@v4
              with:
                name: oro-rust-toolchain-${{github.run_id}}
                path: build/rust/host/stage3
                if-no-files-found: error
                compression-level: 9
                overwrite: true
